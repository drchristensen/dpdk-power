# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2022-2023 The DPDK contributors
# Copyright 2023 Arm Limited

test_runs:
  # define one test run environment
  - dpdk_build:
      dpdk_location:
        # dpdk_tree: Commented out because `tarball` is defined.
        tarball: dpdk-tarball.tar.xz
        # Either `dpdk_tree` or `tarball` can be defined, but not both.
        remote: false # Optional, defaults to false. If it's true, the `dpdk_tree` or `tarball`
                      # is located on the SUT node, instead of the execution host.

      # precompiled_build_dir: Commented out because `build_options` is defined.
      build_options:
        arch: x86_64
        os: linux
        cpu: native
        # the combination of the following two makes CC="ccache gcc"
        compiler: gcc
        compiler_wrapper: ccache # Optional.
      # If `precompiled_build_dir` is defined, DPDK has been pre-built and the build directory is
      # in a subdirectory of DPDK tree root directory. Otherwise, will be using the `build_options`
      # to build the DPDK from source. Either `precompiled_build_dir` or `build_options` can be
      # defined, but not both.
    perf: false # disable performance testing
    func: true # enable functional testing
    skip_smoke_tests: false # optional
    test_suites: # the following test suites will be run in their entirety
      - hello_world
    # The machine running the DPDK test executable
    system_under_test_node:
      node_name: "SUT 1"
      vdevs: # optional; if removed, vdevs won't be used in the test run
        - "crypto_openssl"
    # Traffic generator node to use for this test run
    traffic_generator_node: "TG 1"
nodes:
  # Define a system under test node, having two network ports physically
  # connected to the corresponding ports in TG 1 (the peer node)
  - name: "SUT 1"
    hostname: sut1.change.me.localhost
    user: dtsuser
    arch: x86_64
    os: linux
    lcores: "" # use all the available logical cores
    use_first_core: false # tells DPDK to use any physical core
    memory_channels: 4 # tells DPDK to use 4 memory channels
    hugepages_2mb: # optional; if removed, will use system hugepage configuration
        number_of: 256
        force_first_numa: false
    ports:
      # sets up the physical link between "SUT 1"@0000:00:08.0 and "TG 1"@0000:00:08.0
      - pci: "0000:00:08.0"
        os_driver_for_dpdk: vfio-pci # OS driver that DPDK will use
        os_driver: i40e              # OS driver to bind when the tests are not running
        peer_node: "TG 1"
        peer_pci: "0000:00:08.0"
      # sets up the physical link between "SUT 1"@0000:00:08.1 and "TG 1"@0000:00:08.1
      - pci: "0000:00:08.1"
        os_driver_for_dpdk: vfio-pci
        os_driver: i40e
        peer_node: "TG 1"
        peer_pci: "0000:00:08.1"
  # Define a Scapy traffic generator node, having two network ports
  # physically connected to the corresponding ports in SUT 1 (the peer node).
  - name: "TG 1"
    hostname: tg1.change.me.localhost
    user: dtsuser
    arch: x86_64
    os: linux
    ports:
      # sets up the physical link between "TG 1"@0000:00:08.0 and "SUT 1"@0000:00:08.0
      - pci: "0000:00:08.0"
        os_driver_for_dpdk: rdma
        os_driver: rdma
        peer_node: "SUT 1"
        peer_pci: "0000:00:08.0"
      # sets up the physical link between "SUT 1"@0000:00:08.0 and "TG 1"@0000:00:08.0
      - pci: "0000:00:08.1"
        os_driver_for_dpdk: rdma
        os_driver: rdma
        peer_node: "SUT 1"
        peer_pci: "0000:00:08.1"
    hugepages_2mb: # optional; if removed, will use system hugepage configuration
        number_of: 256
        force_first_numa: false
    traffic_generator:
        type: SCAPY
